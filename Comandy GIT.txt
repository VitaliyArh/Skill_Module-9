
НИчего не получается 1 2 3

git --help --- запрос по камандам консоли в гитхаб



git clone --- клонирование из --- в  --- например репозитория

1 - Запустите Git cmd.
2 - перейти в каталог куда копировать командой cd
3 - прописать путь откуда копировать
4 - Нажать Ввод


git status --- получение статуса файлов в репозитории

1 - Запустите Git cmd.
2 - Перейдите в папку с репозиторием, который вы клонировали в предыдущем уроке.
3 - Используйте команду операционной системы cd для перехода в эту папку (подробнее о командах ОС).
4 - Выполните команду git status.

git status — это основная команда для отслеживания изменений файлов, находящихся в репозитории. 
Команда выводит информацию о тех файлах репозитория, которые пока ещё не находятся под 
версионным контролем или не отслеживаются, и о тех файлах, которые были изменены, и изменения 
которых ещё не были зафиксированы.



dir --- содержимое каталога


git add . --- переносит файл в директорию подготовленных файлов. 
              Эта команда принимает как параметр имя файлов, которые нужно перенести 
              в подготовленные для фиксации. Также можно использовать метасимволы, 
              например ., что означает «добавить все изменённые и неотслеживаемые файлы в подготовленные».


git commit --- Для фиксации изменений необходимо выполнить команду git commit. Если эту команду подать без 
               параметров, то откроется редактор, в котором вам нужно будет добавить сообщение к этому коммиту.

               Можно добавить сообщение после команды git commit с помощью 
               параметра -m, после которого включается сообщение в кавычках. 
               На скриншоте 9.4.5. показано выполнение команды git commit и 
               следом за ней команды git status. Под параметром -m команды 
               на фиксацию изменений передано сообщение о коммите.



git push --- После её ввода появится запрос на ввод имени пользователя и 
             пароля на доступ к удалённому репозиторию. Введите имя пользователя 
             и пароль, и содержимое локального репозитория синхронизируется с GitHub.



git log --- показывающей историю изменений По умолчанию (без аргументов) 
            git log перечисляет коммиты, сделанные в репозитории в обратном 
            к хронологическому порядке: последние коммиты находятся вверху.


git rm --- удаляет файлы из под версионного контроля и из рабочего каталога.
           git rm (название файла)


git branch --- Для создания новой ветки в Git используется команда git branch, п
               осле которой следует имя создаваемой ветки, например:
                           git branch testbranch00



git branch --list. --- Она выведет список веток, которые существуют в вашем локальном 
                       репозитории. Текущая ветка master будет выделена зелёным цветом.


git branch --list -v . --- Вы увидите информацию о последних коммитах каждой из веток. 
                           Так как коммитов в ветку testbranch00 ещё не было, то она указывает 
                           на коммит в мастере, от которого была создана.


git checkout --- необходимо выполнить для переключения на созданную ветку. Выполняя команду 
                 git checkout, укажите после неё имя ветки, на которую вы хотите переключиться. 
                 Например, git checkout testbranch00. Вы получите сообщение о переключении на 
                 ветку testbranch00.



git merge --- Как же всё привести к общему знаменателю? Очень просто. 
              Переключимся обратно на ветку master и добавим изменения из ветки testbranch00 
              в ветку master. Для добавления изменений используется команда merge. Параметром 
              этой команды передаётся имя ветки, которую нужно присоединить. 
                        git merge testbranch00


git merge master. --- важно понимать, что merge это не двунаправленная операция. Файл, который 
                      вы меняли в ветке master, остается неизменным в ветке testbranch00. 
                      Если нужно, чтобы это произошло, нужно слить ветку master в ветку testbranch00. 
                      Для этого нужно сначала переключиться на ветку testbranch00, а потом выполнить 
                      операцию слияния с веткой master, выполнив команду git merge master.


git pull --- команда для переноса новых файлов с сервера на локальный репозиторий.
             Пример: 
             1. создали файл на ГИТ ХАБ или перенесли туда како нибудь файл откуда нибудь.
             2. Запустили git cmd перешли в директорию репозитория 
             3. запустили dir - для контроля
             4. запустили git pull
             5. запустили dir - увидели что дабавились новые файлы.



Последовательность действий и команд



1 - создать файл или внести изменения в готовы файл который находится в локальной папке репозитария


2 - git status --- На экране появится информация о том, что: Файл модифицирован и 
                   изменения не подготовлены для коммита


3 - git add . --- Изменённый файл будет добавлен в индекс.


4 - git status --- обратите внимание, что изменённый файл, добавляемый в подготовленные 
                   для коммита файлы, имеет признак «модифицированный» (modified). В случае, 
                   когда мы добавляли новый файл в репозиторий, он имел признак «новый» (new file).

5 - git commit --- описание смотри выше

6 - git push --- описание смотри выше.








 
















